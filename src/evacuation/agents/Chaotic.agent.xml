<?xml version="1.0" encoding="UTF-8"?>
<!--
  <H3>Evacuation chaotic agent.</H3>
  
  This agent acts upon a given environment
  and attempts to find an exit in a given
  stress situation.
-->
<agent xmlns="http://www.activecomponents.org/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-bdi
	                    http://www.activecomponents.org/jadex-bdi-${jadex_build_version}.xsd"
	name="Chaotic"
	package="evacuation.agents">

	<imports>
		<import>jadex.bdiv3x.runtime.*</import>
		<import>evacuation.world.*</import>
	</imports>

	<beliefs>
		<!--<belief name="world" class="World"/>

		<belief name="GUI" class="jadex.commons.gui.GuiCreator">
			<fact>new jadex.commons.gui.GuiCreator(WorldGUI.class, new Class[]{jadex.bridge.IExternalAccess.class, World.class}, 
				new Object[]{$scope.getExternalAccess(), $beliefbase.world})</fact>
		</belief>-->
	</beliefs>

	<goals>
		<!--<achievegoal name="move" recalculate="false">
			<targetcondition>
				$beliefbase.world.isSolution()
			</targetcondition>
 		</achievegoal>-->

		<!--<metagoal name="choosemove" recalculate="false">
			<parameterset name="applicables" class="ICandidateInfo"/>
			<parameterset name="result" class="ICandidateInfo" direction="out"/>
			<trigger>
				<goal ref="makemove"/>
			</trigger>
		</metagoal>-->
	</goals>

	<plans>
		<!--<plan name="play_simulation">
			<body class="PlaySimulation"/>
		</plan>
		
		<plan name="move_plan">
			<parameter name="move" class="Move">
				<bindingoptions>$beliefbase.world.getPossibleMoves()</bindingoptions>
			</parameter>
			<parameter name="depth" class="int">
				<goalmapping ref="makemove.depth"/>
			</parameter>
			<body class="MovePlan"/>
			<trigger>
				<goal ref="makemove"/>
			</trigger>
		</plan>-->

		<!--<plan name="choose_move_plan">
			<parameterset name="applicables" class="ICandidateInfo">
				<goalmapping ref="choosemove.applicables"/>
			</parameterset>
			<parameterset name="result" class="ICandidateInfo" direction="out">
				<goalmapping ref="choosemove.result"/>
			</parameterset>
			<body class="ChooseMovePlan"/>
			<trigger>
				<goal ref="choosemove"/>
			</tri<gger>
		</plan>-->
	</plans>

	<properties>
		<property name="logging.level">java.util.logging.Level.SEVERE</property>
	</properties>

	<configurations>
		<configuration name="Test World" >
			<beliefs>
				<initialbelief ref="world">
 					<fact>new World(5)</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan name="start_simulation" ref="play_simulation"/>
			</plans>
		</configuration>
		<!--<configuration name="3x3 board (no solution)">
			<beliefs>
				<initialbelief ref="board">
 					<fact>new Board(3)</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan name="start_playing" ref="play_game_plan"/>
			</plans>
		</configuration>
		<configuration name="7x7 board (takes quite long)">
			<beliefs>
				<initialbelief ref="board">
 					<fact>new Board(7)</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan name="start_playing" ref="play_game_plan"/>
			</plans>
		</configuration>
		<configuration name="9x9 board (takes very long)">
			<beliefs>
				<initialbelief ref="board">
 					<fact>new Board(9)</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan name="start_playing" ref="play_game_plan"/>
			</plans>
		</configuration>
		<configuration name="jack-5x5">
			<beliefs>
				<initialbelief ref="board">
 					<fact>new JackBoard()</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan name="start_playing" ref="play_game_plan"/>
			</plans>
		</configuration>-->
	</configurations>
</agent>